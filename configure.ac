# Copyright (C) 2014 Cryptotronix, LLC.

AC_INIT([yacl], [0.0], [bugs@cryptotronix.com], [yacl],
        [https://github.com/cryptotronix/yacl])
AC_PREREQ([2.59])
AC_USE_SYSTEM_EXTENSIONS
AM_INIT_AUTOMAKE([1.10 -Wall no-define])
AC_CONFIG_MACRO_DIR([m4])
PKG_PROG_PKG_CONFIG
m4_ifdef([AM_PROG_AR], [AM_PROG_AR])

# Generate two configuration headers; one for building the library itself with
# an autogenerated template, and a second one that will be installed alongside
# the library.
AC_CONFIG_HEADERS([config.h])
AC_PROG_CC
AC_PROG_CC_C_O
AM_PROG_CC_C_O
LT_INIT([static])
AC_PROG_MKDIR_P

# Define these substitions here to keep all version information in one place.
# For information on how to properly maintain the library version information,
# refer to the libtool manual, section "Updating library version information":
# http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html
AC_SUBST([YACL_SO_VERSION], [0:0:0])
AC_SUBST([YACL_API_VERSION], [0.0])

# uECC settings
AC_DEFINE([uECC_CURVE], [uECC_secp256r1], [Use secp256r1 P-256])
AC_DEFINE([uECC_ASM], [uECC_asm_fast], [Optimize for speed])


# --enable-rpm copies the ni executable and the spec file to the dist package,
# for use in building RPM packages. Requires rpm and rpmbuild.
AC_ARG_ENABLE([rpm],
        [AS_HELP_STRING([--enable-rpm=@<:@yes/no@:>@],
                [Configure for building RPM package @<:@default=no@:>@ (requires rpm and rpmbuild)])],
        [AS_IF([test "x$enable_rpm" = xyes],
                      [AS_IF([test "x$RPMBUILD" = xnotfound],
                                    [AC_MSG_ERROR([rpmbuild is required for --enable-rpm])],
                      [test "x$RPM" = xnotfound],
                                    [AC_MSG_ERROR([rpm is required for --enable-rpm])])])],
        [enable_rpm=no])
AM_CONDITIONAL(BUILDING_RPM, test "x$enable_rpm" = xyes)


# --enable-deb copies only the ni executable to the dist package, for use in
# building DEB packages.
AC_ARG_ENABLE([deb],
        [AS_HELP_STRING([--enable-deb=@<:@yes/no@:>@],
                [Configure for building Debian package @<:@default=no@:>@ (requires dpkg-buildpackage)])],
        [AS_IF([test "x$enable_deb" = xyes],
                      [AS_IF([test "x$DEBUILD" = xnotfound],
                                    [AC_MSG_ERROR([dpkg-buildpackage is required for --enable-deb])],
                      [test "x$enable_rpm" = xyes],
                             [AC_MSG_ERROR([--enable-rpm and --enable-deb are mutually exclusive])])])],
        [enable_deb=no])
AM_CONDITIONAL([BUILDING_DEB], [test "x$enable_deb" = xyes])

# Override the template file name of the generated .pc file, so that there
# is no need to rename the template file when the API version changes.
AC_CONFIG_FILES([Makefile yacl.pc:yacl.pc.in])

AC_OUTPUT


echo "
     $PACKAGE_NAME version $PACKAGE_VERSION
     Prefix..........: $prefix
     C Compiler......: $CC $CFLAGS $CPPFLAGS
     C++ Compiler....: $CXX $CXXFLAGS $CPPFLAGS
     Linker..........: $LD $LDFLAGS $LIBS
     Sys conf dir....: $sysconfdir
     Local state dir.: $localstatedir
     Pkg libexec dir.: $pkglibexecdir
     Building Deb....: $enable_deb
"
